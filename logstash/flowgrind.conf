input {  
	file {
		path => "/tmp/flowgrind-*.log"
		type => "flowgrind"
		start_position => "beginning"
	}
}


filter { 

	if ([message]  =~ /^#/) { 
		drop { }
	}

	csv {
		columns => ["direction", "flow_id", "timestamp_begin", "timestamp_end", "throughput", "transactions", "request_blocks", "response_blocks", "minRTT", "avgRTT", "maxRTT", "minIAT", "avgIAT", "maxIAT", "minDLY", "avgDLY", "maxDLY", "tcpi_unacked", "tcpi_sacked", "tcpi_lost", "tcpi_retrans", "tcpi_retransmits", "tcpi_fackets", "tcpi_reordering", "tcpi_backoffs", "tcpi_ca_state",  "path_mtu"]
		separator => " "
	}

	mutate {
		convert => [ "flow_id", "integer" ]
                convert => [ "timestamp_begin", "float" ]
                convert => [ "timestamp_end", "float" ]
		convert => [ "throughput", "float" ]
		convert => [ "transactions", "float" ]
		convert => [ "request_blocks", "integer" ]
		convert => [ "response_blocks", "integer" ]
		convert => [ "minRTT", "float" ]
		convert => [ "avgRTT", "float" ]
		convert => [ "maxRTT", "float" ]
                convert => [ "minIAT", "float" ]
                convert => [ "avgIAT", "float" ]
                convert => [ "maxIAT", "float" ]
                convert => [ "minDLY", "float" ]
                convert => [ "avgDLY", "float" ]
                convert => [ "maxDLY", "float" ]
		convert => [ "tcpi_unacked", "integer" ]
                convert => [ "tcpi_sacked", "integer" ]
                convert => [ "tcpi_lost", "integer" ]
                convert => [ "tcpi_retrans", "integer" ]
                convert => [ "tcpi_retransmits", "integer" ]
                convert => [ "tcpi_fackets", "integer" ]
                convert => [ "tcpi_reodering", "integer" ]
                convert => [ "tcpi_backoffs", "integer" ]
                convert => [ "path_mtu", "integer" ]
	}

	
}


output {  
	elasticsearch {
		host => "127.0.0.1"
		index => "flowgrind-%{+YYYY.MM.dd}"
	}
}
